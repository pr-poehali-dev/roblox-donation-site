import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import Icon from "@/components/ui/icon";

const AnnoyingAds = () => {
  const [popups, setPopups] = useState<
    Array<{ id: number; type: string; x: number; y: number }>
  >([]);
  const [showBanner, setShowBanner] = useState(false);
  const [bannerPosition, setBannerPosition] = useState({ x: 0, y: 0 });
  const [popupCounter, setPopupCounter] = useState(0);

  const adTypes = [
    {
      type: "win",
      title: "üéâ –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú!",
      content: "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ iPhone 15 Pro! –ö–ª–∏–∫–Ω–∏—Ç–µ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å!",
      color: "bg-green-500",
    },
    {
      type: "urgent",
      title: "‚ö†Ô∏è –°–†–û–ß–ù–û!",
      content: "–í–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä –∑–∞—Ä–∞–∂–µ–Ω! –°–∫–∞—á–∞–π—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!",
      color: "bg-red-500",
    },
    {
      type: "discount",
      title: "üí∞ –°–ö–ò–î–ö–ê 90%!",
      content: "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞! –¢–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è!",
      color: "bg-blue-500",
    },
    {
      type: "alert",
      title: "üö® –í–ù–ò–ú–ê–ù–ò–ï!",
      content: "–û—Å—Ç–∞–ª–æ—Å—å 3 –º–∏–Ω—É—Ç—ã –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–∫—Ü–∏–∏!",
      color: "bg-orange-500",
    },
    {
      type: "prize",
      title: "üèÜ –ü–†–ò–ó –î–õ–Ø –í–ê–°!",
      content: "–ó–∞–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!",
      color: "bg-purple-500",
    },
  ];

  // –í—Å–ø–ª—ã–≤–∞—é—â–∏–µ –æ–∫–Ω–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    const popupInterval = setInterval(() => {
      const randomAd = adTypes[Math.floor(Math.random() * adTypes.length)];
      const newPopup = {
        id: Date.now(),
        type: randomAd.type,
        x: Math.random() * (window.innerWidth - 300),
        y: Math.random() * (window.innerHeight - 200),
      };

      setPopups((prev) => [...prev, newPopup]);
      setPopupCounter((prev) => prev + 1);

      // –ó–≤—É–∫–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–∏–º–∏—Ç–∞—Ü–∏—è)
      console.log("üîä –ù–û–í–ê–Ø –†–ï–ö–õ–ê–ú–ê!");
    }, 30000); // 30 —Å–µ–∫—É–Ω–¥

    return () => clearInterval(popupInterval);
  }, []);

  // –î–≤–∏–∂—É—â–∏–π—Å—è –±–∞–Ω–Ω–µ—Ä
  useEffect(() => {
    setShowBanner(true);

    const bannerInterval = setInterval(() => {
      setBannerPosition({
        x: Math.random() * (window.innerWidth - 400),
        y: Math.random() * (window.innerHeight - 100),
      });
    }, 5000);

    return () => clearInterval(bannerInterval);
  }, []);

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–ø–∞–ø–∞ (–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–≥–æ!)
  const closePopup = (id: number) => {
    setPopups((prev) => prev.filter((p) => p.id !== id));

    // –ü–æ–¥–≤–æ—Ö: –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞–∫—Ä—ã—Ç—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –µ—â–µ 2 –ø–æ–ø–∞–ø–∞!
    setTimeout(() => {
      const newPopups = [];
      for (let i = 0; i < 2; i++) {
        const randomAd = adTypes[Math.floor(Math.random() * adTypes.length)];
        newPopups.push({
          id: Date.now() + i,
          type: randomAd.type,
          x: Math.random() * (window.innerWidth - 300),
          y: Math.random() * (window.innerHeight - 200),
        });
      }
      setPopups((prev) => [...prev, ...newPopups]);
    }, 500);
  };

  return (
    <div className="fixed inset-0 pointer-events-none z-50">
      {/* –î–≤–∏–∂—É—â–∏–π—Å—è –±–∞–Ω–Ω–µ—Ä */}
      {showBanner && (
        <div
          className="fixed bg-yellow-400 text-black p-4 border-4 border-red-500 rounded-lg shadow-2xl animate-bounce pointer-events-auto transition-all duration-1000"
          style={{
            left: bannerPosition.x,
            top: bannerPosition.y,
            zIndex: 1000,
          }}
        >
          <div className="flex items-center space-x-2">
            <Icon name="Gift" size={24} className="animate-spin" />
            <span className="font-bold text-lg animate-pulse">
              üéÅ –ë–ï–°–ü–õ–ê–¢–ù–´–ô –ü–û–î–ê–†–û–ö! –ö–õ–ò–ö–ù–ò –°–Æ–î–ê! üéÅ
            </span>
          </div>
        </div>
      )}

      {/* –í—Å–ø–ª—ã–≤–∞—é—â–∏–µ –æ–∫–Ω–∞ */}
      {popups.map((popup) => {
        const adData =
          adTypes.find((ad) => ad.type === popup.type) || adTypes[0];

        return (
          <Card
            key={popup.id}
            className={`fixed w-80 ${adData.color} text-white border-4 border-yellow-400 shadow-2xl animate-pulse pointer-events-auto`}
            style={{
              left: popup.x,
              top: popup.y,
              zIndex: 999 + popup.id,
            }}
          >
            <CardHeader className="pb-2">
              <div className="flex justify-between items-center">
                <CardTitle className="text-lg font-bold animate-bounce">
                  {adData.title}
                </CardTitle>
                <Button
                  size="sm"
                  variant="destructive"
                  onClick={() => closePopup(popup.id)}
                  className="bg-red-600 hover:bg-red-700 animate-pulse"
                >
                  ‚ùå
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <p className="mb-4 font-semibold">{adData.content}</p>
              <div className="flex space-x-2">
                <Button
                  className="bg-yellow-500 hover:bg-yellow-600 text-black font-bold animate-bounce flex-1"
                  onClick={() => closePopup(popup.id)}
                >
                  –ö–õ–ò–ö–ù–£–¢–¨!
                </Button>
                <Button
                  variant="outline"
                  className="border-white text-white hover:bg-white hover:text-black animate-bounce"
                  onClick={() => closePopup(popup.id)}
                >
                  –ù–ï–¢
                </Button>
              </div>
            </CardContent>
          </Card>
        );
      })}

      {/* –°—á–µ—Ç—á–∏–∫ —Ä–µ–∫–ª–∞–º—ã */}
      <div className="fixed top-4 right-4 bg-red-500 text-white p-2 rounded-lg border-2 border-yellow-400 pointer-events-auto animate-pulse">
        <span className="font-bold">–†–µ–∫–ª–∞–º–∞: {popupCounter}</span>
      </div>

      {/* –ë–æ–∫–æ–≤—ã–µ –±–∞–Ω–Ω–µ—Ä—ã */}
      <div className="fixed left-0 top-1/2 transform -translate-y-1/2 bg-gradient-to-r from-pink-500 to-purple-500 text-white p-4 rotate-90 origin-left pointer-events-auto animate-bounce">
        <span className="font-bold text-sm">üî• –ì–û–†–Ø–ß–ò–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø! üî•</span>
      </div>

      <div className="fixed right-0 top-1/2 transform -translate-y-1/2 bg-gradient-to-r from-blue-500 to-green-500 text-white p-4 -rotate-90 origin-right pointer-events-auto animate-bounce">
        <span className="font-bold text-sm">üíé –≠–ö–°–ö–õ–Æ–ó–ò–í! üíé</span>
      </div>

      {/* –ù–∏–∂–Ω–∏–π –±–∞–Ω–Ω–µ—Ä */}
      <div className="fixed bottom-0 left-0 right-0 bg-red-600 text-white text-center py-3 border-t-4 border-yellow-400 pointer-events-auto animate-pulse">
        <span className="font-bold text-lg">
          ‚è∞ –ê–ö–¶–ò–Ø –ó–ê–ö–ê–ù–ß–ò–í–ê–ï–¢–°–Ø! –ù–ï –£–ü–£–°–¢–ò –®–ê–ù–°! –ö–õ–ò–ö–ù–ò –°–Æ–î–ê! ‚è∞
        </span>
      </div>
    </div>
  );
};

export default AnnoyingAds;
